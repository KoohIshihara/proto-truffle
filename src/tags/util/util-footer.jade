util-footer
  div.wrap-util.f.fm.flex-around
    a(each='{item in contents}').wrap-img.f.fm
      i(onclick='{addHeighlight}' data-link='{item.link}' class='{item.icon}').footer-icon
      div(if='{item.batch}' id='{item.batch}').footer-batch


  style(scoped, type='less').
    :scope {
      position: fixed;
      z-index: 101;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 48px;
      border-top: solid 0.6px rgba(0,0,0,0.2);
      background: #fff;
      .wrap-util {
        width: 100%;
        height: 100%;
        .wrap-img {
          position: relative;
          i {
            font-size: 22px;
            color: #ddd;
          }
          .footer-batch {
            display: none;
            position: absolute;
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background: #F5A623;
            left: 18px;
            top: 0px;
          }
        }
        .active {
          color: #2a2a2a !important;
        }
      }
    }

  script.

    var self = this;

    this.contents = [
      {icon: 'icon-ionicons_svg_md-list active', link:'user-list'},
      {icon: 'icon-ionicons_svg_md-notifications', link:'notification', batch: 'notificationBatch'},
      {icon: 'icon-ionicons_svg_md-person-add-2', link:'invite-user'},
    ];

    this.on('mount', function(){
      if(session.user) self.checkNotifications();
    });

    this.addHeighlight = function(e) {
      
      var link = './#' + e.target.dataset.link;
      location.href = link;

      var icons = document.getElementsByClassName('footer-icon');
      for(var i=0; i<icons.length; i++){
        icons[i].classList.remove('active');
      }
      e.target.classList.add('active');

    }


    this.checkNotifications = async () => {
      var notifications = await service.db.collection('notifications')
        .where("to", "==", session.user.uid)
        .get().then(function(querySnapshot) {
          var notificationArray = [];
          querySnapshot.forEach(function(doc) {
            notificationArray.push(doc.data())
          });
          return notificationArray;
        });

      var willShowBatch = false;
      for(var i=0; i<notifications.length; i++){
        if(notifications[i].read==false){
          willShowBatch = true;
        }
      }
      if(willShowBatch) $('#notificationBatch').show();
    }

    

