atom-checkbox
  div.warp-atom.mt16
    div.cp_ipcheck
      ul
        li.list_item
          label.f
            input(onclick='{toggleNextActive}' type="checkbox" data-id='{opts.content.id}' data-label='{opts.content.label}').option-input05
            p {opts.content.label}
        

  style(scoped, type='less').
    :scope {
      .warp-atom {
        .cp_ipcheck {
          width: 90%;
          margin: 0 auto;
        }
        .cp_ipcheck ul {
          list-style: none;
        }
        .cp_ipcheck .list_item {
          margin: 0 0 0.5rem 0;
          padding: 0;
        }
        .cp_ipcheck label {
          line-height: 135%;
          position: relative;
          margin: 0.5rem;
          cursor: pointer;
        }
        .cp_ipcheck p {
          position: relative;
          top: -2px;
        }
        .cp_ipcheck .option-input05 {
          position: relative;
          margin: 0 1rem 0 0;
          cursor: pointer;
        }
        .cp_ipcheck .option-input05:before {
          position: absolute;
          z-index: 1;
          top: 0.125rem;
          left: 0.1875rem;
          width: 0.75rem;
          height: 0.375rem;
          content: '';
          -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75);
                  transition:         transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75);
          -webkit-transform: rotate(-45deg) scale(0, 0);
                  transform: rotate(-45deg) scale(0, 0);
          border: 2px solid #03A9F4;
          border-top-style: none;
          border-right-style: none;
        }
        .cp_ipcheck .option-input05:checked:before {
          -webkit-transform: rotate(-45deg) scale(1, 1);
                  transform: rotate(-45deg) scale(1, 1);
        }
        .cp_ipcheck .option-input05:after {
          position: absolute;
          top: -0.125rem;
          left: 0;
          width: 1rem;
          height: 1rem;
          content: '';
          cursor: pointer;
          border: 2px solid #f2f2f2;
          background: #ffffff;
        }   

      }
    }

  script.

    this.on('mount', function(){

    });

    
    this.toggleNextActive = function(e){
    
      var contentsForTextarea = [];

      var checkboxes = document.getElementsByClassName('option-input05');
      var isChecked = false;
      for(i in checkboxes){
        if(checkboxes[i].checked){
          isChecked = true;
          var dataset = checkboxes[i].dataset;
          var content = {
            id: dataset.id,
            label: dataset.label,
          };
          contentsForTextarea.push(content);
        }
      }

      // チェックがあったら「次へ」を有効にする      
      var button = document.getElementById('profileNext');
      if(isChecked){
        button.classList.add('cta-active');
      }else{
        button.classList.remove('cta-active');
      }

      // page-input-profileで使うデータを一時保存
      riot.contentsForInputProfile = contentsForTextarea;

    }



