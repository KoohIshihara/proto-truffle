page-login-with-invitation
  div.wrap-page.f.fh
    div.wrap-box
      p.logo.mb40 Truffle-Proto
      div.wrap-invite-message.mb40
        div.wrap-user-img.f.fh
          img(src='{inviterImg}')
        p.mt22 {invitationText}
        p あなたがプロフィールを書くと、
        p お互いのプロフィールが見れるようになります。
      p.sign_in_up.mb24 Sign up / in With
      div.f.fc
        div.wrap-fb-button.f.fm.px10.py6
          img(src='./img/icon/fb.svg')
          p(onclick='{login}') Facebook


  style(scoped, type='less').
    :scope {
      .wrap-page {
        width: 100%;
        height: 100%;
        background: #ffffff;
        .logo {
          color: #2a2a2a;
          text-align: center;
          letter-spacing: 1.4px;
          font-weight: 800;
          font-size: 36px;
        }
        .wrap-invite-message {
          .wrap-user-img {
            width: 120px;
            height: 120px;
            overflow: hidden;
            border-radius: 50%;
            margin: 0 auto;
            img {
              height: 100%;
              object-fit: cover;
            }
          }
          p {
            font-size: 12px;
            text-align: center;
          }
        }
        .sign_in_up {
          color: #999;
          text-align: center;
          font-weight: 300;
        }
        .wrap-fb-button {
          width: 140px;
          background: #2a2a2a;
          border-radius: 3px;
          img {
            width: 24px;
          }
          p {
            color: #FFF;
            width: 100%;
            text-align: center;
            letter-spacing: 1.4px;
            font-weight: 300;
          }
        }
      }
    }

  script.

    var self = this;

    this.on('mount', function(){
      
    });
    
    this.login = loginWithFacebook;

    async function init(invitationId) {
      var invitaion = await service.db.collection('invitaions')
        .doc(invitationId).get();
      invitaion = invitaion.data();
      var fromUid = invitaion.from;

      var fromUser = await service.db.collection('users')
        .doc(fromUid).get();
      fromUser = fromUser.data();

      if(fromUser && invitaion){
        
        self.invitationText = `${fromUser.name}さんが${invitaion.name}のプロフィールを作成しました。`;
        self.inviterImg = `${fromUser.photoUrl + "?width=320&amp;height=320"}`;
        self.update();
        riot.invitationFromUid = fromUid;

      }else{
        window.location.href = './#login';
      }
    }

    var invitationId = opts.content;
    riot.invitationId = invitationId;
    if(invitationId){
      init(invitationId);
    }else{
      window.location.href = './#login';
    }

